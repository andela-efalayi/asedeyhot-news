// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserAvatar Component should render an avatar for a user 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ListItem
    autoGenerateNestedIndicator={true}
    containerElement="span"
    disableKeyboardFocus={false}
    disabled={false}
    hoverColor="none"
    initiallyOpen={false}
    insetChildren={true}
    nestedItems={Array []}
    nestedLevel={0}
    onKeyboardFocus={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onNestedListToggle={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
    open={null}
    primaryText="Jest Tester"
    primaryTogglesNestedList={false}
    rightAvatar={
        <IconButton
            disableTouchRipple={true}
            disabled={false}
            iconStyle={
                Object {
                    "marginTop": "-15px",
                  }
            }
            onTouchTap={[Function]}
            tooltip="click to sign out"
            tooltipPosition="top-center"
            touch={false}
        >
            <Avatar
                size={40}
                src="https://dummyimage.com/600x400/000000/0011ff"
            />
        </IconButton>
    }
    secondaryTextLines={1}
>
    <Popover
        anchorEl={undefined}
        anchorOrigin={
            Object {
                "horizontal": "left",
                "vertical": "bottom",
              }
        }
        animated={true}
        animation={[Function]}
        autoCloseWhenOffScreen={true}
        canAutoPosition={true}
        className="signOutPopOver"
        onRequestClose={[Function]}
        open={false}
        style={
            Object {
                "overflowY": "auto",
              }
        }
        targetOrigin={
            Object {
                "horizontal": "left",
                "vertical": "top",
              }
        }
        useLayerForClickAway={true}
        zDepth={1}
    >
        <Menu
            autoWidth={true}
            desktop={false}
            disableAutoFocus={false}
            initiallyKeyboardFocused={false}
            maxHeight={28}
            multiple={false}
            onChange={[Function]}
            onEscKeyDown={[Function]}
            onItemTouchTap={[Function]}
            onKeyDown={[Function]}
        >
            <MenuItem
                anchorOrigin={
                    Object {
                        "horizontal": "right",
                        "vertical": "top",
                      }
                }
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                primaryText="Sign out"
                rightIcon={<ActionPowerSettingsNew />}
                style={
                    Object {
                        "fontSize": "13px",
                        "marginBottom": "0px",
                        "marginTop": "-15px",
                        "right": "0px",
                      }
                }
                value="signout"
            />
        </Menu>
    </Popover>
</ListItem>,
  "nodes": Array [
    <ListItem
      autoGenerateNestedIndicator={true}
      containerElement="span"
      disableKeyboardFocus={false}
      disabled={false}
      hoverColor="none"
      initiallyOpen={false}
      insetChildren={true}
      nestedItems={Array []}
      nestedLevel={0}
      onKeyboardFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onNestedListToggle={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      open={null}
      primaryText="Jest Tester"
      primaryTogglesNestedList={false}
      rightAvatar={
            <IconButton
                  disableTouchRipple={true}
                  disabled={false}
                  iconStyle={
                        Object {
                              "marginTop": "-15px",
                            }
                  }
                  onTouchTap={[Function]}
                  tooltip="click to sign out"
                  tooltipPosition="top-center"
                  touch={false}
            >
                  <Avatar
                        size={40}
                        src="https://dummyimage.com/600x400/000000/0011ff"
                  />
            </IconButton>
      }
      secondaryTextLines={1}
>
      <Popover
            anchorEl={undefined}
            anchorOrigin={
                  Object {
                        "horizontal": "left",
                        "vertical": "bottom",
                      }
            }
            animated={true}
            animation={[Function]}
            autoCloseWhenOffScreen={true}
            canAutoPosition={true}
            className="signOutPopOver"
            onRequestClose={[Function]}
            open={false}
            style={
                  Object {
                        "overflowY": "auto",
                      }
            }
            targetOrigin={
                  Object {
                        "horizontal": "left",
                        "vertical": "top",
                      }
            }
            useLayerForClickAway={true}
            zDepth={1}
      >
            <Menu
                  autoWidth={true}
                  desktop={false}
                  disableAutoFocus={false}
                  initiallyKeyboardFocused={false}
                  maxHeight={28}
                  multiple={false}
                  onChange={[Function]}
                  onEscKeyDown={[Function]}
                  onItemTouchTap={[Function]}
                  onKeyDown={[Function]}
            >
                  <MenuItem
                        anchorOrigin={
                              Object {
                                    "horizontal": "right",
                                    "vertical": "top",
                                  }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Sign out"
                        rightIcon={<ActionPowerSettingsNew />}
                        style={
                              Object {
                                    "fontSize": "13px",
                                    "marginBottom": "0px",
                                    "marginTop": "-15px",
                                    "right": "0px",
                                  }
                        }
                        value="signout"
                  />
            </Menu>
      </Popover>
</ListItem>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <UserAvatar
        user={
                Object {
                        "imageUrl": "https://dummyimage.com/600x400/000000/0011ff",
                        "name": "Jest Tester",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": UserAvatar {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleRequestClose": [Function],
        "handleTouchTap": [Function],
        "props": Object {
          "user": Object {
            "imageUrl": "https://dummyimage.com/600x400/000000/0011ff",
            "name": "Jest Tester",
          },
        },
        "refs": Object {},
        "signOutUser": [Function],
        "state": Object {
          "open": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ListItem
          autoGenerateNestedIndicator={true}
          containerElement="span"
          disableKeyboardFocus={false}
          disabled={false}
          hoverColor="none"
          initiallyOpen={false}
          insetChildren={true}
          nestedItems={Array []}
          nestedLevel={0}
          onKeyboardFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onNestedListToggle={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          open={null}
          primaryText="Jest Tester"
          primaryTogglesNestedList={false}
          rightAvatar={
                    <IconButton
                              disableTouchRipple={true}
                              disabled={false}
                              iconStyle={
                                        Object {
                                                  "marginTop": "-15px",
                                                }
                              }
                              onTouchTap={[Function]}
                              tooltip="click to sign out"
                              tooltipPosition="top-center"
                              touch={false}
                    >
                              <Avatar
                                        size={40}
                                        src="https://dummyimage.com/600x400/000000/0011ff"
                              />
                    </IconButton>
          }
          secondaryTextLines={1}
>
          <Popover
                    anchorEl={undefined}
                    anchorOrigin={
                              Object {
                                        "horizontal": "left",
                                        "vertical": "bottom",
                                      }
                    }
                    animated={true}
                    animation={[Function]}
                    autoCloseWhenOffScreen={true}
                    canAutoPosition={true}
                    className="signOutPopOver"
                    onRequestClose={[Function]}
                    open={false}
                    style={
                              Object {
                                        "overflowY": "auto",
                                      }
                    }
                    targetOrigin={
                              Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                    }
                    useLayerForClickAway={true}
                    zDepth={1}
          >
                    <Menu
                              autoWidth={true}
                              desktop={false}
                              disableAutoFocus={false}
                              initiallyKeyboardFocused={false}
                              maxHeight={28}
                              multiple={false}
                              onChange={[Function]}
                              onEscKeyDown={[Function]}
                              onItemTouchTap={[Function]}
                              onKeyDown={[Function]}
                    >
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Sign out"
                                        rightIcon={<ActionPowerSettingsNew />}
                                        style={
                                                  Object {
                                                            "fontSize": "13px",
                                                            "marginBottom": "0px",
                                                            "marginTop": "-15px",
                                                            "right": "0px",
                                                          }
                                        }
                                        value="signout"
                              />
                    </Menu>
          </Popover>
</ListItem>,
        "_debugID": 2,
        "_renderedOutput": <ListItem
          autoGenerateNestedIndicator={true}
          containerElement="span"
          disableKeyboardFocus={false}
          disabled={false}
          hoverColor="none"
          initiallyOpen={false}
          insetChildren={true}
          nestedItems={Array []}
          nestedLevel={0}
          onKeyboardFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onNestedListToggle={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          open={null}
          primaryText="Jest Tester"
          primaryTogglesNestedList={false}
          rightAvatar={
                    <IconButton
                              disableTouchRipple={true}
                              disabled={false}
                              iconStyle={
                                        Object {
                                                  "marginTop": "-15px",
                                                }
                              }
                              onTouchTap={[Function]}
                              tooltip="click to sign out"
                              tooltipPosition="top-center"
                              touch={false}
                    >
                              <Avatar
                                        size={40}
                                        src="https://dummyimage.com/600x400/000000/0011ff"
                              />
                    </IconButton>
          }
          secondaryTextLines={1}
>
          <Popover
                    anchorEl={undefined}
                    anchorOrigin={
                              Object {
                                        "horizontal": "left",
                                        "vertical": "bottom",
                                      }
                    }
                    animated={true}
                    animation={[Function]}
                    autoCloseWhenOffScreen={true}
                    canAutoPosition={true}
                    className="signOutPopOver"
                    onRequestClose={[Function]}
                    open={false}
                    style={
                              Object {
                                        "overflowY": "auto",
                                      }
                    }
                    targetOrigin={
                              Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                    }
                    useLayerForClickAway={true}
                    zDepth={1}
          >
                    <Menu
                              autoWidth={true}
                              desktop={false}
                              disableAutoFocus={false}
                              initiallyKeyboardFocused={false}
                              maxHeight={28}
                              multiple={false}
                              onChange={[Function]}
                              onEscKeyDown={[Function]}
                              onItemTouchTap={[Function]}
                              onKeyDown={[Function]}
                    >
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Sign out"
                                        rightIcon={<ActionPowerSettingsNew />}
                                        style={
                                                  Object {
                                                            "fontSize": "13px",
                                                            "marginBottom": "0px",
                                                            "marginTop": "-15px",
                                                            "right": "0px",
                                                          }
                                        }
                                        value="signout"
                              />
                    </Menu>
          </Popover>
</ListItem>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <UserAvatar
    user={
        Object {
            "imageUrl": "https://dummyimage.com/600x400/000000/0011ff",
            "name": "Jest Tester",
          }
    }
/>,
}
`;
