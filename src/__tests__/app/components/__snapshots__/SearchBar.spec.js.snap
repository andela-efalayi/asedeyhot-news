// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar Component should render a textfield 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Toolbar
    noGutter={false}
>
    <TextField
        disabled={false}
        floatingLabelFixed={false}
        fullWidth={true}
        hintStyle={
            Object {
                "color": "white",
              }
        }
        hintText="Search for a news source"
        multiLine={false}
        onChange={null}
        rows={1}
        type="text"
        underlineShow={true}
        underlineStyle={
            Object {
                "borderColor": "#2196f3",
              }
        }
    />
</Toolbar>,
  "nodes": Array [
    <Toolbar
      noGutter={false}
>
      <TextField
            disabled={false}
            floatingLabelFixed={false}
            fullWidth={true}
            hintStyle={
                  Object {
                        "color": "white",
                      }
            }
            hintText="Search for a news source"
            multiLine={false}
            onChange={null}
            rows={1}
            type="text"
            underlineShow={true}
            underlineStyle={
                  Object {
                        "borderColor": "#2196f3",
                      }
            }
      />
</Toolbar>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SearchBar
        searchPage={null}
        title={null}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "searchPage": null,
          "title": null,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Toolbar
          noGutter={false}
>
          <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    fullWidth={true}
                    hintStyle={
                              Object {
                                        "color": "white",
                                      }
                    }
                    hintText="Search for a news source"
                    multiLine={false}
                    onChange={null}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    underlineStyle={
                              Object {
                                        "borderColor": "#2196f3",
                                      }
                    }
          />
</Toolbar>,
        "_debugID": 2,
        "_renderedOutput": <Toolbar
          noGutter={false}
>
          <TextField
                    disabled={false}
                    floatingLabelFixed={false}
                    fullWidth={true}
                    hintStyle={
                              Object {
                                        "color": "white",
                                      }
                    }
                    hintText="Search for a news source"
                    multiLine={false}
                    onChange={null}
                    rows={1}
                    type="text"
                    underlineShow={true}
                    underlineStyle={
                              Object {
                                        "borderColor": "#2196f3",
                                      }
                    }
          />
</Toolbar>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SearchBar
    searchPage={null}
    title={null}
/>,
}
`;
